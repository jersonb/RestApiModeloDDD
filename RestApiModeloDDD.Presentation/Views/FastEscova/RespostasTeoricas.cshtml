@{
    ViewData["Title"] = "Respostas do teste";
}
<h6>Parte teórica </h6>
<br />
<div style="margin-bottom: 20px;">
    <p>
        1. Escreva uma função que, dada uma lista e uma soma de destino, retorna índices baseados em zero de quaisquer dois elementos distintos cuja soma é igual à soma de destino. Se não existem tais elementos, a função deve retornar nulo.
        Por exemplo, <strong>FindTwoSum (new List< int>() {1, 3, 5, 7, 9}, 12) </strong>deve retornar qualquer das seguintes tuplas de índices:
    </p>
     1, 4  (3 + 9 = 12)
    <br /> 2, 3  (5 + 7 = 12)
    <br /> 3, 2  (7 + 5 = 12)
    <br />4, 1  (9 + 3 = 12)  
    <br />
    <div class="form-control" style="width: 600px; height: auto; background: #e9ecef; margin-top:20px;">
        using System;
        <br />usingSystem.Collections.Generic;
        <br />classTwoSum
        <br />{
        <br />&nbsp public static Tuple< int, int>FindTwoSum(IList< int> list, int sum)
        <br />&nbsp {
        <br />

        &nbsp resolução

        <br />  &nbsp  }
        <br />
        <br />public static void Main(string[] args)
        <br />{
        <br />&nbsp Tuple< int, int> indices = FindTwoSum(newList< int> () { 1, 3, 5, 7, 9 }, 12);
        <br />&nbsp Console.WriteLine(indices.Item1 + " " + indices.Item2);
        <br />    }
        <br />}

    </div>
</div>